apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: "kotlin-allopen"

allOpen {
    annotation("com.joba.barebone.app.annotations.Testable")
}
repositories {
    jcenter()
    maven {
        url 'https://maven.google.com'
    }
}

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.3"
    defaultConfig {
        applicationId "com.joba.barebone"
        minSdkVersion 16
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        resValue "string", "test_value", "Test123"
    }

    flavorDimensions "store"

    productFlavors {
        forAmazon {
            dimension "store"
            buildConfigField "String", "APP_STORE", "\"amazon\""
        }

        forGoogle {
            dimension "store"
            buildConfigField "String", "APP_STORE", "\"google\""
        }
    }

    buildTypes {

        debug {
            debuggable true
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        coverage.initWith(buildTypes.debug)
        coverage {
            testCoverageEnabled true
        }
    }

    sourceSets {
        main {
            java.srcDirs += ['src/main/java', 'src/main/kotlin']
            kotlin.srcDirs += 'src/main/kotlin'
        }
        test {
            java.srcDirs += ['src/test/java', 'src/test/kotlin']
            kotlin.srcDirs += 'src/test/kotlin'
        }

    }

    dataBinding {
        enabled = true
    }

    applicationVariants.all { variant ->
        if (variant.name.contains("Google")) {
            switch (variant.buildType.name) {
                case ["debug", "ci", "coverage", "purchaseDebug"]:
                    variant.resValue "string", "adjust_app_token", "9w96m2kpfdta"
                    break
                default:
                    variant.resValue "string", "adjust_app_token", "9w96m2kpfdta"
                    break;

            }
        }

        if (variant.name.contains("Amazon")) {
            switch (variant.buildType.name) {
                case ["debug", "ci", "coverage", "purchaseDebug"]:
                    variant.resValue "string", "adjust_app_token", "ktbmtoo8rda8"
                    break
                default:
                    variant.resValue "string", "adjust_app_token", "ktbmtoo8rda8"
                    break
            }
        }
    }
}

kapt {
    generateStubs = true
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:25.3.1'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    compile "com.android.support:recyclerview-v7:25.3.1"
    compile "com.android.support:cardview-v7:25.3.1"
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"

    kapt "com.android.databinding:compiler:2.5.0-alpha-preview-02"

    // dagger 2
    compile "com.google.dagger:dagger:2.10"
    kapt "com.google.dagger:dagger-compiler:2.10"

    // rxJava
    compile "io.reactivex:rxjava:1.2.9"
    compile "io.reactivex:rxandroid:1.2.1"
    compile 'com.jakewharton.rxbinding:rxbinding:1.0.1'

    // network and data
    compile 'com.squareup.okhttp3:okhttp:3.8.0'
    compile "com.google.code.gson:gson:2.8.0"

    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:2.7.19'
    testCompile "org.robolectric:robolectric:3.3.2"
}
repositories {
    mavenCentral()
}
